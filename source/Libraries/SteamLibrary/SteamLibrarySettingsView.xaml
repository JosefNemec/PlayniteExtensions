<UserControl x:Class="SteamLibrary.SteamLibrarySettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:steam="clr-namespace:SteamLibrary"
             xmlns:steamShared="clr-namespace:Steam"
             xmlns:pcmd="clr-namespace:Playnite.Commands"
             xmlns:pcon="clr-namespace:Playnite.Converters"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"              
             d:DesignHeight="450" d:DesignWidth="600">

    <UserControl.Resources>
        <pcon:NegateConverter x:Key="NegateConverter" />
        <pcon:EnumToBooleanConverter x:Key="EnumConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}"
                    x:Key="BackgroundSourceEnumValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="steamShared:BackgroundSource" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ComboBox x:Key="BackgroundSourceBox" x:Shared="False"
            SelectedValue="{Binding Settings.BackgroundSource}"
            ItemsSource="{Binding Source={StaticResource BackgroundSourceEnumValues}}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={steam:BackgroundSourceToStringConverter}}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
    </UserControl.Resources>

    <TabControl>
        <TabItem Header="{DynamicResource LOCGeneralLabel}">
            <StackPanel Margin="20">
                <CheckBox DockPanel.Dock="Top" Name="CheckSteamImportInstalled"
                          Margin="0,0,0,15"
                          IsChecked="{Binding Settings.ImportInstalledGames}"
                          Content="{DynamicResource LOCSteamSettingsImportInstalledLabel}"/>

                <CheckBox DockPanel.Dock="Top" Name="CheckSteamConnectAccount"
                          IsChecked="{Binding Settings.ConnectAccount}"
                          Content="{DynamicResource LOCSteamSettingsConnectAccount}"/>

                <DockPanel DockPanel.Dock="Top" Margin="40,5,5,0" IsEnabled="{Binding IsChecked, ElementName=CheckSteamConnectAccount}">

                    <CheckBox DockPanel.Dock="Top" Name="CheckSteamImportUninstalled"
                              IsChecked="{Binding Settings.ImportUninstalledGames}"
                              Margin="0,10,0,0"
                              Content="{DynamicResource LOCSteamSettingsImportUninstalledLabel}"/>

                    <CheckBox DockPanel.Dock="Top"
                              IsChecked="{Binding Settings.IncludeFreeSubGames}"
                              Margin="0,10,0,0"
                              Visibility="{Binding IsFirstRunUse, Converter={pcon:InvertedBooleanToVisibilityConverter}}"
                              Content="{DynamicResource LOCSteamImportFreeSubGames}"/>

                    <CheckBox DockPanel.Dock="Top"
                              IsChecked="{Binding Settings.IgnoreOtherInstalled}"
                              Margin="0,10,0,0"
                              Content="{DynamicResource LOCSteamIgnoreOtherAccountGames}"/>

                    <StackPanel Orientation="Horizontal"
                                DockPanel.Dock="Top" Margin="0,15,5,5" HorizontalAlignment="Left">
                        <Button Content="{DynamicResource LOCSteamAuthenticateLabel}"
                                Command="{Binding LoginCommand}"/>
                        <TextBlock VerticalAlignment="Center" Margin="10,0,0,0">
                            <TextBlock.Tag>
                                <PriorityBinding>
                                    <Binding Path="AuthStatus" IsAsync="True" />
                                    <Binding Source="{x:Static steam:AuthStatus.Checking}" />
                                </PriorityBinding>
                            </TextBlock.Tag>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                                    <Style.Triggers>
                                        <Trigger Property="Tag" Value="{x:Static steam:AuthStatus.Checking}">
                                            <Setter Property="Text" Value="{DynamicResource LOCSteamLoginChecking}" />
                                        </Trigger>
                                        <Trigger Property="Tag" Value="{x:Static steam:AuthStatus.Ok}">
                                            <Setter Property="Text" Value="{DynamicResource LOCSteamLoggedIn}" />
                                        </Trigger>
                                        <Trigger Property="Tag" Value="{x:Static steam:AuthStatus.AuthRequired}">
                                            <Setter Property="Text" Value="{DynamicResource LOCSteamNotLoggedIn}" />
                                        </Trigger>
                                        <Trigger Property="Tag" Value="{x:Static steam:AuthStatus.PrivateAccount}">
                                            <Setter Property="Text" Value="{DynamicResource LOCSteamRequiresApiKey}" />
                                        </Trigger>
                                        <Trigger Property="Tag" Value="{x:Static steam:AuthStatus.Failed}">
                                            <Setter Property="Text" Value="{DynamicResource LOCSteamNotLoggedInError}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>

                    <CheckBox Content="{DynamicResource LOCSteamPrivateAccount}"
                              IsChecked="{Binding Settings.IsPrivateAccount}"
                              DockPanel.Dock="Top" Margin="0,15,0,0"
                              Name="CheckSteamPrivate" VerticalAlignment="Center"
                              ToolTip="{DynamicResource LOCSettingsApiKeyTooltip}"/>
                    <StackPanel DockPanel.Dock="Top" Margin="25,10,5,5" Orientation="Horizontal"
                                IsEnabled="{Binding IsChecked, ElementName=CheckSteamPrivate}">
                        <TextBlock Text="{DynamicResource LOCSteamAPIKey}" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding Settings.ApiKey, UpdateSourceTrigger=PropertyChanged, Delay=150}"
                                 Width="200" VerticalAlignment="Center" Margin="10,0,10,0"/>
                        <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center">
                    <Hyperlink NavigateUri="https://steamcommunity.com/dev/apikey"
                               Command="{x:Static pcmd:GlobalCommands.NavigateUrlCommand}"
                               CommandParameter="{Binding NavigateUri, RelativeSource={RelativeSource Self}}">
                        <Run Text="{DynamicResource LOCSettingsApiKeyUrlText}" />
                    </Hyperlink>
                        </TextBlock>
                    </StackPanel>
                </DockPanel>

                <TextBlock VerticalAlignment="Center" Margin="0,12,0,0">
                    <Hyperlink NavigateUri="https://github.com/JosefNemec/PlayniteExtensions/wiki/Steam-troubleshooting"
                               Command="{x:Static pcmd:GlobalCommands.NavigateUrlCommand}"
                               CommandParameter="{Binding NavigateUri, RelativeSource={RelativeSource Self}}">
                        <Run Text="{DynamicResource LOCSteamTroubleShootingIssues}" />
                    </Hyperlink>
                </TextBlock>
            </StackPanel>
        </TabItem>
        <TabItem Header="{DynamicResource LOCSteamAdditionalAccounts}">
            <DockPanel Margin="10">
                <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap"
                           Text="{DynamicResource LOCSteamAdditionalAccountsDescription}" />
                <TextBlock VerticalAlignment="Center" Margin="0,10,0,0" DockPanel.Dock="Top">
                    <Hyperlink NavigateUri="https://github.com/JosefNemec/PlayniteExtensions/wiki/Steam-troubleshooting"
                               Command="{x:Static pcmd:GlobalCommands.NavigateUrlCommand}"
                               CommandParameter="{Binding NavigateUri, RelativeSource={RelativeSource Self}}">
                        <Run Text="{DynamicResource LOCSteamTroubleShootingIssues}" />
                    </Hyperlink>
                </TextBlock>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" Margin="0,10,0,0" HorizontalAlignment="Left">
                    <Button Content="{DynamicResource LOCAddTitle}"
                            Command="{Binding AddAccountCommand}"/>
                    <Button Content="{DynamicResource LOCRemoveTitle}" Margin="10,0,0,0"
                            Command="{Binding RemoveAccountCommand}"
                            CommandParameter="{Binding SelectedItem, ElementName=GridAccounts}"/>
                </StackPanel>
                <DataGrid Name="GridAccounts" Margin="0,10,0,0" DockPanel.Dock="Top"
                          CanUserAddRows="False" AutoGenerateColumns="False" CanUserResizeRows="False" GridLinesVisibility="None"
                          ItemsSource="{Binding Settings.AdditionalAccounts}" SelectionMode="Single">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="{DynamicResource LOCSteamAccountID}" MinWidth="150">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding AccountId, UpdateSourceTrigger=PropertyChanged}"
                                             Background="{DynamicResource NormalBrushDark}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="{DynamicResource LOCSteamAPIKey}" MinWidth="150">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding ApiKey, UpdateSourceTrigger=PropertyChanged}"
                                             Background="{DynamicResource NormalBrushDark}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="{DynamicResource LOCSteamImportPlaytime}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding ImportPlayTime, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </TabItem>
        <TabItem Header="{DynamicResource LOCSettingsMetadataLabel}"
                 Visibility="{Binding IsFirstRunUse, Converter={pcon:InvertedBooleanToVisibilityConverter}}">
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <StackPanel Margin="20" Width="Auto">
                    <Grid Width="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="10"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock VerticalAlignment="Center" Text="{DynamicResource LOCSteamMetadataLanguageLabel}" Margin="0,0,10,0" Grid.Row="0" Grid.Column="0"/>
                        <ComboBox x:Name="LanguageSelection" DisplayMemberPath="Value" SelectedValuePath="Key"
                                  SelectedValue="{Binding Settings.LanguageKey}" ItemsSource="{Binding Path=Languages}"
                                  IsEditable="false" Grid.Row="0" Grid.Column="1" MinWidth="150"/>

                        <TextBlock Text="{DynamicResource LOCSteamBackgroundSource}" VerticalAlignment="Center" Margin="0,0,10,0" Grid.Row="2" Grid.Column="0" />
                        <ComboBox MinWidth="150" Grid.Row="2" Grid.Column="1"
                                  SelectedValue="{Binding Settings.BackgroundSource}"
                                  ItemsSource="{Binding Source={StaticResource BackgroundSourceEnumValues}}" />
                    </Grid>
                    <CheckBox Content="{DynamicResource LOCSteamUseVerticalCovers}" IsChecked="{Binding Settings.DownloadVerticalCovers}" Margin="0,12,0,0"/>
                    <StackPanel Orientation="Horizontal" Margin="0,12,0,0">
                        <CheckBox IsChecked="{Binding Settings.LimitTagsToFixedAmount}" Content="{DynamicResource LOCSteamLimitTagCountLabel}" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBox Text="{Binding FixedTagCountString}" Width="50" VerticalAlignment="Center" IsEnabled="{Binding Settings.LimitTagsToFixedAmount}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,12,0,0">
                        <CheckBox IsChecked="{Binding Settings.UseTagPrefix}" Content="{DynamicResource LOCSteamTagPrefixLabel}" VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBox Text="{Binding Settings.TagPrefix}" Width="200" VerticalAlignment="Center" IsEnabled="{Binding Settings.UseTagPrefix}"/>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
        <TabItem Header="{DynamicResource LOCSteamTagBlacklistTabLabel}"
                 Visibility="{Binding IsFirstRunUse, Converter={pcon:InvertedBooleanToVisibilityConverter}}">
            <DockPanel Margin="20">
                <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" DockPanel.Dock="Top" Text="{DynamicResource LOCSteamTagBlacklistExplanationLabel}"/>

                <Grid VerticalAlignment="Stretch" Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="Left" Width="*"/>
                        <ColumnDefinition x:Name="Middle" Width="95"/>
                        <ColumnDefinition x:Name="Right" Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="Header" MaxHeight="20"/>
                        <RowDefinition x:Name="Body"/>
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="FontSize" Value="40"/>
                            <Setter Property="Margin" Value="20,12"/>
                            <Setter Property="Padding" Value="8,2"/>
                            <Setter Property="FontFamily" Value="{DynamicResource FontIcoFont}"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </Grid.Resources>
                    <TextBlock HorizontalAlignment="Center" Grid.Column="0" Grid.Row="0" Text="{DynamicResource LOCSteamTagWhitelistHeader}"/>
                    <TextBlock HorizontalAlignment="Center" Grid.Column="2" Grid.Row="0" Text="{DynamicResource LOCSteamTagBlacklistHeader}"/>
                    <ListBox DockPanel.Dock="Top" Name="Whitelist"
                             SelectionMode="Extended" MinHeight="220"
                             VerticalAlignment="Stretch"
                             ItemsSource="{Binding OkayTags}"
                             DisplayMemberPath="Name"
                             Grid.Column="0" Grid.Row="1"/>
                    <ListBox DockPanel.Dock="Top" Name="Blacklist"
                             SelectionMode="Extended" MinHeight="220"
                             VerticalAlignment="Stretch"
                             ItemsSource="{Binding BlacklistedTags}"
                             DisplayMemberPath="Name"
                             Grid.Column="2" Grid.Row="1"/>
                    <StackPanel Grid.Column="1" Grid.Row="1" VerticalAlignment="Center">
                        <Button Content="&#xEA94;" Command="{Binding BlacklistCommand}" CommandParameter="{Binding SelectedItems, ElementName=Whitelist}" ToolTip="{DynamicResource LOCSteamTagBlacklistTooltip}"/>
                        <Button Content="&#xEA93;" Command="{Binding WhitelistCommand}" CommandParameter="{Binding SelectedItems, ElementName=Blacklist}" ToolTip="{DynamicResource LOCSteamTagWhitelistTooltip}"/>
                    </StackPanel>
                </Grid>
            </DockPanel>
        </TabItem>
        <TabItem Header="{DynamicResource LOCSettingsAdvancedLabel}"
                 Visibility="{Binding IsFirstRunUse, Converter={pcon:InvertedBooleanToVisibilityConverter}}">
            <StackPanel Margin="20">
                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal"
                            Visibility="{Binding IsFirstRunUse, Converter={pcon:InvertedBooleanToVisibilityConverter}}">
                    <TextBlock Text="{DynamicResource LOCSettingsSteamImportMetadata}"
                               VerticalAlignment="Center"/>
                    <ComboBox IsReadOnly="True" Margin="10,0,0,0"
                              Name="ComboSteamMetadataImport"
                              DisplayMemberPath="AccountName" SelectedValuePath="Id" SelectedIndex="0"
                              ItemsSource="{Binding SteamUsers}" />
                </StackPanel>
                <StackPanel DockPanel.Dock="Top" Margin="40,10,5,5" Orientation="Horizontal"                    
                            Visibility="{Binding IsFirstRunUse, Converter={pcon:InvertedBooleanToVisibilityConverter}}">
                    <Button Content="{DynamicResource LOCImportSteamCategoriesLabel}" Name="ButtonImportSteamCategories"
                            Margin="0,0,10,0" Command="{Binding ImportSteamCategoriesCommand}"
                            CommandParameter="{Binding SelectedItem, ElementName=ComboSteamMetadataImport}"/>
                    <Button Content="{DynamicResource LOCImportSteamLastActivityLabel}" Name="ButtonImportSteamLastActivity"
                            Command="{Binding ImportSteamLastActivityCommand}"
                            CommandParameter="{Binding SelectedItem, ElementName=ComboSteamMetadataImport}"/>
                </StackPanel>
                <CheckBox Content="{DynamicResource LOCSteamShowFriendsButton}"
                          IsChecked="{Binding Settings.ShowFriendsButton}" Margin="0,10,0,10" />
                <CheckBox Content="{DynamicResource LOCSteamShowGameLaunchMenuInDesktopMode}"
                          IsChecked="{Binding Settings.ShowSteamLaunchMenuInDesktopMode}"/>
                <CheckBox Content="{DynamicResource LOCSteamShowGameLaunchMenuInFullscreenMode}"
                          IsChecked="{Binding Settings.ShowSteamLaunchMenuInFullscreenMode}" Margin="0,10,0,10"/>
            </StackPanel>
        </TabItem>        
    </TabControl>
</UserControl>
